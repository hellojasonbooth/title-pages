a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}iframe,img{vertical-align:bottom;max-width:100%}input,select,textarea{font:inherit}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-font-smoothing:antialiased;text-rendering:optimizeLegibility}@font-face{font-family:Jost;src:url(fonts/jost-book.woff2),url(fonts/jost-book.woff)}body{background-color:#f2f1ef;font-family:Jost;font-size:32px}header{z-index:99;width:100%;display:flex;justify-content:flex-end;position:fixed;top:0;left:0}header div.burger-menu{padding:30px;cursor:pointer}header div.burger-menu img{-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;user-drag:none}div.menu{position:fixed;top:0;right:0;width:50vw;height:100vh;background-color:#fff;transform:translateX(50vw)}main section.draw-area{width:100vw;height:100vh;display:flex;justify-content:center;align-items:center}main section.draw-area h1.logo{max-width:370px}main section.draw-area h1.logo img{width:100%;height:100%;-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;user-drag:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0LnNjc3MiLCJ0eXBvZ3JhcGh5LnNjc3MiLCJhcHAuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxFQUFHLEtBQU0sUUFBUyxRQUZLLE9BU3ZCLFFBQVMsTUFHRyxNQVBaLEVBSDJCLElBREEsV0FEckIsS0FTVSxPQURULFFBSEUsT0FIdUIsS0FBTSxLQUk5QixHQUhSLElBTXdCLFFBTm5CLElBSE8sSUFNWixHQUFJLEdBSE0sR0FNdUIsTUFGakMsU0FHUSxXQUFSLE9BQW9CLE9BSFYsS0FOVixHQUFJLEdBQUksR0FBSSxHQUFJLEdBQUksR0FTUSxPQUFRLE9BVnBDLEtBS00sRUFMaUMsT0FHekIsSUFBSyxJQUFLLElBSVIsTUFBTyxPQURILEdBTWQsS0FETixLQUFNLElBWHlCLE9BTW5CLEdBS0QsT0FWYSxFQUFlLElBRVYsRUFRVixLQVJhLEVBQUcsS0FRVixRQVB6QixNQUppQixLQUlWLE9BQVEsT0FBUSxJQU9XLFFBUE4sSUFJNUIsTUFBZ0IsTUFBNkIsR0FBdEIsTUFBa0IsR0FBWCxNQUk5QixLQUpxQyxHQUpKLEdBQzlCLEVBQ2EsR0FGcUIsSUFRbEIsTUFDakIsT0FBUSxFQUNSLFFBQVMsRUFDVCxPQUFRLEVBQ1IsVUFBVyxLQUNYLEtBQU0sUUFDTixlQUFnQixTQUdsQixRQUFTLE1BQU8sUUFBUyxXQUFZLE9BQ3JDLE9BQVEsT0FBUSxPQUFRLEtBQU0sSUFBSyxRQUNqQyxRQUFTLE1BR1gsS0FDRSxZQUFhLEVBR2YsR0FBSSxHQUNGLFdBQVksS0FHZCxXQUFZLEVBQ1YsT0FBUSxLQUdTLGlCQUFuQixrQkFDVSxRQUFWLFNBQ0UsUUFBUyxHQUNULFFBQVMsS0FHWCxNQUNFLGdCQUFpQixTQUNqQixlQUFnQixFQUdiLE9BQUwsSUFDRSxlQUFnQixPQUNoQixVQUFXLEtBR2IsTUFBaUIsT0FBVixTQUNMLEtBQU0sUUFHUixFQUNFLG1CQUFvQixXQUNwQixnQkFBaUIsV0FDakIsV0FBWSxXQUNaLHVCQUF3QixZQUN4QixlQUFnQixtQkMvRGxCLFdBQ0ksWUFBYSxLQUNiLElBQUssMEJBQTBCLENBQUUsMEJDUXJDLEtBQ0ksaUJBTkosUUFPSSxZQUxKLEtBTUksVUFBQSxLQUlKLE9BQ0ksUUFBQSxHQUNBLE1BQUEsS0FDQSxRQUFBLEtBQ0EsZ0JBQUEsU0FDQSxTQUFBLE1BQ0EsSUFBQSxFQUNBLEtBQUEsRUFQSix1QkFVUSxRQUFBLEtBQ0EsT0FBQSxRQVhSLDJCQWNZLGtCQUFBLEtBQ0EsaUJBQUEsS0FDQSxlQUFBLEtBQ0EsYUFBQSxLQUNBLFVBQUEsS0FNWixTQUNJLFNBQUEsTUFDQSxJQUFBLEVBQ0EsTUFBQSxFQUNBLE1BQUEsS0FDQSxPQUFBLE1BQ0EsaUJBekNKLEtBMENJLFVBQUEsaUJBR0osdUJBSVEsTUFBQSxNQUNBLE9BQUEsTUFDQSxRQUFBLEtBQ0EsZ0JBQUEsT0FDQSxZQUFBLE9BUlIsK0JBWVksVUFBQSxNQVpaLG1DQWVnQixNQUFBLEtBQ0EsT0FBQSxLQUNBLGtCQUFBLEtBQ0EsaUJBQUEsS0FDQSxlQUFBLEtBQ0EsYUFBQSxLQUNBLFVBQUEiLCJmaWxlIjoiYXBwLmNzcyIsInNvdXJjZXNDb250ZW50IjpbImh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogJyc7XG4gIGNvbnRlbnQ6IG5vbmU7XG59XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbmltZywgaWZyYW1lIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG5pbnB1dCwgdGV4dGFyZWEsIHNlbGVjdCB7XG4gIGZvbnQ6IGluaGVyaXQ7XG59XG5cbioge1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG59XG4iLCJAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJKb3N0XCI7XG4gICAgc3JjOiB1cmwoZm9udHMvam9zdC1ib29rLndvZmYyKSwgdXJsKGZvbnRzL2pvc3QtYm9vay53b2ZmKTtcbn0iLCJcbkBpbXBvcnQgXCJyZXNldFwiO1xuQGltcG9ydCBcInR5cG9ncmFwaHlcIjtcblxuXG4kcHJpbWFyeS1jb2xvcjogI0YyRjFFRjtcbiRzZWNvbmRhcnktY29sb3I6ICNmZmY7XG4kYm9keS1mb250OiBcIkpvc3RcIjtcblxuXG5ib2R5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICBmb250LXNpemU6IDMycHg7XG59XG5cblxuaGVhZGVyIHtcbiAgICB6LWluZGV4OiA5OTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgcG9zaXRpb246Zml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG5cbiAgICBkaXYuYnVyZ2VyLW1lbnUge1xuICAgICAgICBwYWRkaW5nOiAzMHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIC13ZWJraXQtdXNlci1kcmFnOiBub25lO1xuICAgICAgICAgICAgLWtodG1sLXVzZXItZHJhZzogbm9uZTtcbiAgICAgICAgICAgIC1tb3otdXNlci1kcmFnOiBub25lO1xuICAgICAgICAgICAgLW8tdXNlci1kcmFnOiBub25lO1xuICAgICAgICAgICAgdXNlci1kcmFnOiBub25lO1xuICAgICAgICB9XG4gICAgfVxuXG59XG5cbmRpdi5tZW51IHtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHdpZHRoOiA1MHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1jb2xvcjtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTB2dyk7XG59XG5cbm1haW4ge1xuXG5cbiAgICBzZWN0aW9uLmRyYXctYXJlYSB7XG4gICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgaGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICAgaDEubG9nbyB7XG5cbiAgICAgICAgICAgIG1heC13aWR0aDogMzcwcHg7XG5cbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgICAgIC13ZWJraXQtdXNlci1kcmFnOiBub25lO1xuICAgICAgICAgICAgICAgIC1raHRtbC11c2VyLWRyYWc6IG5vbmU7XG4gICAgICAgICAgICAgICAgLW1vei11c2VyLWRyYWc6IG5vbmU7XG4gICAgICAgICAgICAgICAgLW8tdXNlci1kcmFnOiBub25lO1xuICAgICAgICAgICAgICAgIHVzZXItZHJhZzogbm9uZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG4gICAgICAgIFxuXG4gICAgfVxuXG59XG4iXX0= */
